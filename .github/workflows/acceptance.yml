name: Acceptance Test

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  packages:
    name: Select packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-matrix.outputs.packages }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if go.mod or go.sum changed
        id: deps
        if: github.event_name != 'workflow_dispatch'
        uses: tj-actions/changed-files@v46
        with:
          files: go.{mod,sum}

      - name: Find packages with changes
        id: packages
        if: steps.deps.outputs.any_changed != 'true'
        uses: tj-actions/changed-files@v46
        with:
          files: integrations/**
          dir_names: true
          dir_names_max_depth: 2
          json: true

      - name: Set output
        id: set-matrix
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" || "${{ steps.deps.outputs.any_changed }}" == "true" ]]; then
            echo "packages=$(find integrations -mindepth 1 -maxdepth 2 -type d | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          else
            echo "packages=${{ steps.packages.outputs.all_changed_and_modified_files }}" >> $GITHUB_OUTPUT
          fi

  test:
    name: Test ${{ matrix.package }}
    if: needs.packages.outputs.packages != '[]'
    needs: packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run acceptance tests
        run: go test -v -tags acceptance -run ^TestAcceptance$ ./${{ matrix.package }}

  acceptance:
    name: Acceptance Test
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: exit 0
