name: Acceptance Test

on:
  push:
    branches: [master]
    paths:
      - '**.go'
      - go.mod
      - go.sum
  pull_request:
    branches: [master]
    paths:
      - '**.go'
      - go.mod
      - go.sum
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  packages:
    name: Select packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-matrix.outputs.packages }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check if go.mod or go.sum changed
        id: deps
        if: github.event_name != 'workflow_dispatch'
        uses: tj-actions/changed-files@v47
        with:
          files: go.{mod,sum}

      - name: Find packages with changes
        id: packages
        if: steps.deps.outputs.any_changed == 'false'
        uses: tj-actions/changed-files@v47
        with:
          files: integrations/**
          dir_names: true
          dir_names_max_depth: 2
          json: true

      - name: Set matrix
        id: set-matrix
        run: |
          RUNNER=$(yq -o=json '.github/acceptance.yml')

          if [[ "${{ github.event_name }}" == "workflow_dispatch" || "${{ steps.deps.outputs.any_changed }}" == "true" ]]; then
            PACKAGES=$(find integrations -mindepth 1 -maxdepth 1 -type d | jq -R -s -c 'split("\n")[:-1]')
          else
            PACKAGES='${{ steps.packages.outputs.all_changed_and_modified_files }}'
          fi

          MATRIX=$(echo "$PACKAGES" | jq -c --argjson os "$RUNNER" '[.[] | {package: ., os: ($os[.] // "ubuntu-latest")}]')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  test:
    name: ${{ matrix.package }}
    if: needs.packages.outputs.packages != '[]'
    needs: packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Run acceptance tests
        run: |
          go test -v -tags acceptance -run ^TestAcceptance$ -coverprofile coverage.out -coverpkg=./... ./${{ matrix.package }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.package }}

  acceptance:
    name: Acceptance Test
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: exit 0
